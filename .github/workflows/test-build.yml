name: Test building C++ targets

on: [push, pull_request]

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    name: Get changed files
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          json: true

      # reference: https://stackoverflow.com/a/65094398
      - name: Setup matrix combinations
        id: setup-matrix-combinations
        run: python $GITHUB_WORKSPACE/.github/workflows/gen_matrix.py "${{ steps.changed-files.outputs.all_changed_files }}" $GITHUB_OUTPUT build

    outputs:
      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}

  matrix-job:
    runs-on: ubuntu-latest
    needs: setup-matrix
    if: ${{ needs.setup-matrix.outputs.matrix-combinations != '{}' }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}
    container: ubuntu:latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.directory }}
    steps:
      - name: Install git
        working-directory: /
        run: |
          apt-get -qq -y update
          apt-get -qq -y install git

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install compiler
        run: |
          apt-get -qq -y install build-essential
          apt-get -qq -y install lsb-release wget software-properties-common gnupg
          if [[ ${{ matrix.compiler }} == clang++-* ]]; then
            # install clang and libc++ from the LLVM nightly repository
            LLVM_VERSION=${{ matrix.compiler }}
            LLVM_VERSION=${LLVM_VERSION#clang++-}
            wget https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh
            ./llvm.sh $LLVM_VERSION
            if [[ ${{ matrix.stdlib }} == libc++ ]]; then
              apt-get -y install libc++-$LLVM_VERSION-dev libc++abi-$LLVM_VERSION-dev
            fi
          elif [[ ${{ matrix.compiler }} == clang++ ]]; then
            apt-get -y install clang
          else
            apt-get -y install g++
          fi

      - name: Build targets
        run: |
          if [[ ${{ matrix.stdlib }} == libc++ ]]; then
            export USE_LIBCXX=TRUE
          fi
          ${{ matrix.compiler }} --version
          make -j2 CXX=${{ matrix.compiler }} DISABLE_SANITIZERS=TRUE build/release/${{ matrix.target }} build/debug/${{ matrix.target }} build/fast/${{ matrix.target }}
