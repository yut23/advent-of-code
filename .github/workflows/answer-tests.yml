name: Run answer tests

on: [push, pull_request]

jobs:
  setup-matrix:
    uses: ./.github/workflows/generate-matrix.yml
    with:
      mode: answer

  matrix-job:
    runs-on: ubuntu-latest
    needs: setup-matrix
    if: ${{ needs.setup-matrix.outputs.targets != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        TARGET: ${{ fromJson(needs.setup-matrix.outputs.targets) }}
        BUILD_CONFIG: ${{ fromJson(needs.setup-matrix.outputs.build-configs) }}
    container: ubuntu:latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.TARGET.directory }}
    steps:
      - name: Install git
        working-directory: /
        run: |
          apt-get -qq -y update
          apt-get -qq -y install git

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install compiler
        run: |
          apt-get -qq -y install build-essential
          apt-get -qq -y install lsb-release wget software-properties-common gnupg
          if [[ ${{ matrix.BUILD_CONFIG.compiler }} == clang++-* ]]; then
            # install clang and libc++ from the LLVM nightly repository
            LLVM_VERSION=${{ matrix.BUILD_CONFIG.compiler }}
            LLVM_VERSION=${LLVM_VERSION#clang++-}
            wget https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh
            ./llvm.sh $LLVM_VERSION
            if [[ ${{ matrix.BUILD_CONFIG.stdlib }} == libc++ ]]; then
              apt-get -y install libc++-$LLVM_VERSION-dev libc++abi-$LLVM_VERSION-dev
            fi
          elif [[ ${{ matrix.BUILD_CONFIG.compiler }} == clang++ ]]; then
            apt-get -y install clang
          else
            apt-get -y install g++
          fi

      - name: Build targets
        run: |
          if [[ ${{ matrix.BUILD_CONFIG.stdlib }} == libc++ ]]; then
            export USE_LIBCXX=TRUE
          fi
          ${{ matrix.BUILD_CONFIG.compiler }} --version
          make CXX=${{ matrix.BUILD_CONFIG.compiler }} build/release/${{ matrix.TARGET.name }}

      - name: Run answer tests
        timeout-minutes: 2
        run: |
          # mark git checkout as safe
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          ./run_answer_tests.sh ${{ matrix.TARGET.name }}
